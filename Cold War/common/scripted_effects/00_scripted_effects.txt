#	Example:
# 
#	example_effect = {
#		add_political_power = 66
#		add_popularity = {
#			ideology = unaligned_right
#			popularity = 0.33
#		}
#	}
#
#
#	In a script file:
#
#	effect = {
#		example_effect = yes
#	}
#

#####################################
### emergency_factory_conversion ####
#####################################

#This is going to give misleading and ugly tooltips. Making it nice will take effort. TODO_WTT_CD make nice or ignore and remove comment. Easiest solution is just making a custom tooltip that says "5 civilian factories will be converted to military factories" and ignore telling the player the states where it will happen.

replace_civ_with_arms_factories = {	

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
	
	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}

	random_owned_controlled_state = {
		limit = {
			is_fully_controlled_by = ROOT
			industrial_complex > 0
		}
		remove_building = {
			type = industrial_complex
			level = 1
		}
		add_building_construction = {
			type = arms_factory
			level = 1
			instant_build = yes
		}
	}
}

#Country scope
ROOT_inherit_current_scope_wars_effect = {
	custom_effect_tooltip = ROOT_inherit_current_scope_wars_effect
	hidden_effect = {	
		every_country = {
			limit = {
				has_defensive_war_with = PREV
			}
			ROOT = { declare_war_on = { target = PREV type = annex_everything } }
		}
		every_country = {
			limit = {
				has_offensive_war_with = PREV
			}
			declare_war_on = { target = ROOT type = annex_everything }
		}
	}
}

# Add AI strategies in case of Central European Alliance
GER_democratic_nations_ai_strategies = {
	# Reduce Contain against SOV
	add_ai_strategy = {
		type = contain
		id = "SOV"
		value = -800
	}
	add_ai_strategy = {
		type = contain
		id = "ITA"
		value = -800
	}
	# Poland
	add_ai_strategy = {
		type = protect
		id = "POL"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "POL"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "POL"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "POL"
		value = -200
	}
	# Finland
	add_ai_strategy = {
		type = protect
		id = "FIN"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "FIN"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "FIN"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "FIN"
		value = -200
	}
	# Estonia
	add_ai_strategy = {
		type = protect
		id = "EST"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "EST"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "EST"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "EST"
		value = -200
	}
	# Latvia
	add_ai_strategy = {
		type = protect
		id = "LAT"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "LAT"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "LAT"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "LAT"
		value = -200
	}
	# Lithuania
	add_ai_strategy = {
		type = protect
		id = "LIT"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "LIT"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "LIT"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "LIT"
		value = -200
	}
	# Romania
	add_ai_strategy = {
		type = protect
		id = "ROM"
		value = -200
	}
	add_ai_strategy = {
		type = ignore
		id = "ROM"
		value = 200
	}
	add_ai_strategy = {
		type = befriend
		id = "ROM"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "ROM"
		value = -200
	}
	# Norway
	add_ai_strategy = {
		type = ignore
		id = "NOR"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "NOR"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "NOR"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "NOR"
		value = -200
	}
	# Sweden
	add_ai_strategy = {
		type = ignore
		id = "SWE"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "SWE"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "SWE"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "SWE"
		value = -200
	}
	# Denmark
	add_ai_strategy = {
		type = ignore
		id = "DEN"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "DEN"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "DEN"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "DEN"
		value = -200
	}
	# Netherlands
	add_ai_strategy = {
		type = ignore
		id = "HOL"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "HOL"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "HOL"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "HOL"
		value = -200
	}
	# Belgium
	add_ai_strategy = {
		type = ignore
		id = "BEL"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "BEL"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "BEL"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "BEL"
		value = -200
	}
	# Luxemburg
	add_ai_strategy = {
		type = ignore
		id = "LUX"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "LUX"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "LUX"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "LUX"
		value = -200
	}
	# Austria
	add_ai_strategy = {
		type = ignore
		id = "AUS"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "AUS"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "AUS"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "AUS"
		value = -200
	}
	# Hungary
	add_ai_strategy = {
		type = ignore
		id = "HUN"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "HUN"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "HUN"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "HUN"
		value = -200
	}
	# Czechoslovakia
	add_ai_strategy = {
		type = ignore
		id = "CZE"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "CZE"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "CZE"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "CZE"
		value = -200
	}
	# Yugoslavia
	add_ai_strategy = {
		type = ignore
		id = "YUG"
		value = 200
	}
	add_ai_strategy = {
		type = protect
		id = "YUG"
		value = -200
	}
	add_ai_strategy = {
		type = befriend
		id = "YUG"
		value = -200
	}
	add_ai_strategy = {
		type = alliance
		id = "YUG"
		value = -200
	}
}

print_variable_log_effect = {
	print_variables = {
		file = variables_yug
		append = yes
	}
}

get_best_alliance_match_democratic_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = democratic
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_unaligned_right_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = unaligned_right
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

get_best_alliance_match_communism_effect = { #arguably a trigger, but it does stuff so we keep it in here. If this is your first time seeing this, welcome to my personal hell.
	set_temp_variable = { best_leader = 0 }
	set_temp_variable = { best_leader_score = 0 }
	if = {
		limit = {
			all_other_country = {
				is_faction_leader = yes
				is_major = yes
				has_government = communism
				not = { has_war_with = ROOT }
				set_temp_variable = { this.leader_score = num_of_factories }
				add_to_temp_variable = { this.leader_score = num_battalions }
				all_of_scopes = {
					array = allies
					add_to_temp_variable = { PREV.leader_score = num_of_factories }
					add_to_temp_variable = { PREV.leader_score = num_battalions }
				}
				if = {
					limit = {
						capital_scope = {
							is_on_continent = ROOT
						}
					}
					multiply_temp_variable = { leader_score = 2 }
				}
				if = {
					limit = {
						any_neighbor_country = { tag = ROOT }
					}
					multiply_temp_variable = { leader_score = 1.25 }
				}
				if = {
					limit = {
						check_variable = { ROOT.best_leader_score < leader_score }
						set_temp_variable = { ROOT.best_leader = this }
						set_temp_variable = { ROOT.best_leader_score = leader_score }
					}
				}
			}
		}
	}		
}

clear_sabotaged_resources_if_necesary = {
	if = {
		limit = {
			not = {
				has_dynamic_modifier = {
					modifier = sabotaged_resources
				}
			}
		}
		
		clear_variable = sabotaged_oil
		clear_variable = sabotaged_aluminium
		clear_variable = sabotaged_rubber
		clear_variable = sabotaged_tungsten
		clear_variable = sabotaged_steel
		clear_variable = sabotaged_chromium
	}
}

remove_from_allowed_party = {
	if = {
		limit = { has_government = democratic }
		set_temp_variable = { allowed_party_democratic = 0 }
	}
	else_if = {
		limit = { has_government = unaligned_right }
		set_temp_variable = { allowed_party_unaligned_right = 0 }
	}
	else_if = {
		limit = { has_government = communism }
		set_temp_variable = { allowed_party_communism = 0 }
	}
	else_if = {
		limit = { has_government = neutrality }
		set_temp_variable = { allowed_party_neutrality = 0 }
	}
}

#expectes a temp variable country_to_initiate which should contain original_tag to instantiate as a collabration government
instantiate_collaboration_government = {
	custom_effect_tooltip = compliance_80_effect_tooltip
	hidden_effect = {
		set_variable = { collaboration_formed@var:country_to_initiate = 1 }
		
		if = {
			# if country_to_initiate does not exist, simply release it as a puppet
			limit = { 
				var:country_to_initiate = {
					exists = no
				}
			}
			var:country_to_initiate = { set_variable = { collaboration_formed_by = PREV } }
			release_autonomy = {
				target = country_to_initiate
				autonomy_state = autonomy_collaboration_government
				freedom_level = 0.5
			}
		}
		else = {
			# if country_to_initiate exists, create a dynamic country as our new puppet
			
			create_dynamic_country = {
				original_tag = country_to_initiate
			
				set_variable = { collaboration_formed_by = PREV }
				set_temp_variable = { new_country = this }
				
				PREV = {
					every_controlled_state = {
						limit = { occupied_country_tag = country_to_initiate }
						
						var:new_country = {
							transfer_state = PREV
						}
					}
					
					puppet = new_country
					
					set_autonomy = {
						target = new_country
						autonomy_state = autonomy_collaboration_government
						freedom_level = 0.5
					}
				}
			}
		}
	}
}

abandon_colony_tag = {
	if = {
		limit = {
			is_subject = yes
		}
		if = {
			limit = {
				original_tag = CAN
			}
			if = { 
				limit = { NOT = { has_dlc = "Together for Victory" } }
				set_cosmetic_tag = CAN_ALY
			}
			else = {
				set_cosmetic_tag = CAN_UK
			}
		}
		else_if = {
			limit = {
				original_tag = RAJ
			}
			set_cosmetic_tag = RAJ_UK
		}
		else_if = {
			limit = {
				original_tag = MAL
			}
			set_cosmetic_tag = MAL_UK
		}
		else_if = {
			limit = {
				original_tag = INS
			}
			set_cosmetic_tag = INS_HOL
		}
	}
	else = {
		if = {
			limit = {
				original_tag = RAJ
				NOT = {
					any_country = {
						has_cosmetic_tag = RAJ_FREE
					}
				}
			}
			set_cosmetic_tag = RAJ_FREE
		}
		else_if = {
			limit = {
				original_tag = CAN
				NOT = {
					any_country = {
						has_cosmetic_tag = CAN_FREE
					}
				}
			}
			set_cosmetic_tag = CAN_FREE
		}
		else_if = {
			limit = {
				original_tag = INS
				NOT = { has_cosmetic_tag = MAJ_UNIFIED }
				NOT = {
					any_country = {
						has_cosmetic_tag = INS_FREE
					}
				}
			}
			set_cosmetic_tag = INS_FREE
		}
		else_if = {
			limit = {
				OR = {
					has_cosmetic_tag = united_polynesia
					has_cosmetic_tag = MAJ_UNIFIED
				}
			}
		}
		else = {
			drop_cosmetic_tag = yes
		}
	}
}

upgrade_military_budget_law = {
	if = {
		limit = { has_idea = cw_no_military_budget }
		add_ideas = cw_minimum_military_budget
	}
	else_if = {
		limit = { has_idea = cw_minimum_military_budget}
		add_ideas = cw_low_military_budget
	
	}
	else_if = {
		limit = { has_idea = cw_low_military_budget}
		add_ideas = cw_medium_military_budget
	
	}
	else_if = {
		limit = { has_idea = cw_medium_military_budget}
		add_ideas = cw_high_military_budget
	
	}
	else_if = {
		limit = { has_idea = cw_high_military_budget}
		add_ideas = cw_very_high_military_budget
	
	}
	else_if = {
		limit = { has_idea = cw_very_high_military_budget }
		add_political_power = 200
		add_command_power = 50
	
	}


}


upgrade_conscription_law = {

	if = {
		limit = { has_idea = cw_disarmed_nation }
		add_ideas = cw_volunteer_only
	}
	else_if = {
		limit = { has_idea = cw_volunteer_only}
		add_ideas = cw_limited_conscription
	
	}
	else_if = {
		limit = { has_idea = cw_limited_conscription}
		add_ideas = cw_extensive_conscription
	
	}
	else_if = {
		limit = { has_idea = cw_extensive_conscription }
		add_ideas = cw_service_by_requirement
	
	}
	else_if = {
		limit = { has_idea = cw_service_by_requirement}
		add_ideas = cw_all_adults_serve
	
	}
	else_if = {
		limit = { has_idea = cw_all_adults_serve }
		add_political_power = 200
		add_command_power = 50
	
	}

}

upgrade_containment_law = {
	if = {
		limit = { has_idea = cw_isolationism}
		add_ideas = cw_appeasement
	}
	else_if = {
		limit = { has_idea = cw_appeasement}
		add_ideas = cw_detente
	}
	else_if = {
		limit = { has_idea = cw_detente}
		add_ideas = cw_containment
	}
	else_if = {
		limit = { has_idea = cw_containment }
		add_ideas = cw_rollback
	}
	else_if = {
		limit = { has_idea = cw_rollback }
		add_ideas = cw_hardline
	}
	else_if = {
		limit = { has_idea = cw_hardline }
		add_political_power = 200
		add_command_power = 50
	}

}

upgrade_work_hour_law = {
	if = {
		limit = { has_idea = cw_6_hour_workday }
		add_ideas = cw_8_hour_workday
	}
	else_if = {
		limit = { has_idea =  cw_8_hour_workday}
		add_ideas = cw_10_hour_workday
	}
	else_if = {
		limit = { has_idea =  cw_10_hour_workday}
		add_ideas = cw_12_hour_workday
	}
	else_if = {
		limit = { has_idea =  cw_12_hour_workday}
		add_ideas = cw_14_hour_workday
	}
	else_if = {
		limit = { has_idea =  cw_14_hour_workday}
		add_ideas = cw_no_worktime_regulation
	}
	else_if = {
		limit = { has_idea =  cw_no_worktime_regulation }
		add_political_power = 200
	}
	

}




update_ideology_purity = {
	if = {
		limit = { OR = { original_tag = USA  original_tag = SOV } }
		
		
		
		if = { # purity = 0
			limit = {  check_variable = { ROOT.cw_ideology_power < 5 } check_variable = { ROOT.cw_ideology_power > -6 }  NOT = { has_idea = ideological_purity_0 } }
			
			remove_ideas = {
				ideological_purity_1
				ideological_purity_2
				ideological_purity_3
				ideological_impurity_1
				ideological_impurity_2
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_purity_0
			}
		}
		
		if = { # purity = 1
			limit = {   check_variable = { ROOT.cw_ideology_power < 10 } check_variable = { ROOT.cw_ideology_power > 4 }  NOT = { has_idea = ideological_purity_0 } } 
		
			remove_ideas = {
				ideological_purity_0
				ideological_purity_2
				ideological_purity_3
				ideological_impurity_1
				ideological_impurity_2
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_purity_1
			}
		}
		
		if = { # purity = 2
			limit = { check_variable = { ROOT.cw_ideology_power > 29 } NOT = { has_idea = ideological_purity_2 }  } 
			remove_ideas = {
				ideological_purity_1
				ideological_purity_0
				ideological_purity_3
				ideological_impurity_1
				ideological_impurity_2
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_purity_2
			}
			
			if = { limit = { check_variable = { ROOT.cw_ideology_power > 35 } } set_variable = { ROOT.cw_ideology_power = 35 }}
				
		}
		
		if = { # purity = 3
			limit = { check_variable = { ROOT.cw_ideology_power > 29 } NOT = { has_idea = ideological_purity_3 } } 
			remove_ideas = {
				ideological_purity_1
				ideological_purity_2
				ideological_purity_0
				ideological_impurity_1
				ideological_impurity_2
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_purity_3
			}
		}
		
		if = { # purity = -1
			limit = { check_variable = { ROOT.cw_ideology_power < -4 } check_variable = { ROOT.cw_ideology_power > -10 } NOT = { has_idea = ideological_impurity_1 }} 
			remove_ideas = {
				ideological_purity_1
				ideological_purity_2
				ideological_purity_3
				ideological_purity_0
				ideological_impurity_2
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_impurity_1
			}
		}
		
		if = { # purity = -2
			limit = { AND = { check_variable = { ROOT.cw_ideology_power < -9 } check_variable = { ROOT.cw_ideology_power > -20 } NOT = { has_idea = ideological_impurity_2 }} }
		
			remove_ideas = {
				ideological_purity_1
				ideological_purity_2
				ideological_purity_3
				ideological_purity_0
				ideological_impurity_1
				ideological_impurity_3
			}
			
			add_ideas = {
				ideological_impurity_2
			}
		}
		
		if = { # purity = -3
			limit = { AND = { check_variable = { ROOT.cw_ideology_power < -19 } check_variable = { ROOT.cw_ideology_power > - } NOT = { has_idea = ideological_impurity_3 }} }
		
			remove_ideas = {
				ideological_purity_1
				ideological_purity_2
				ideological_purity_3
				ideological_purity_0
				ideological_impurity_2
				ideological_impurity_1
			}
			
			add_ideas = {
				ideological_impurity_3
			}
		}
	}
	

}

remove_potential_special_forces_tree = {
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		set_variable = { sf_trees = 0 }
	}
	else = {
		subtract_from_variable = { sf_trees = 1 }
	}
}

add_generic_leader = {
	create_country_leader = {
		name = "Communist Militias"
		desc = ""
		picture = "gfx/leaders/generic_communist_militia.dds"
		ideology = stalinism_idolg
		expire = 1980.10.10
		traits = { stern_anti_imperialist last_stand_fighter }
	
	}
	
	create_country_leader = {
		name = "Communist Militias"
		desc = ""
		picture = "gfx/leaders/generic_communist_militia.dds"
		ideology = communist_idolg
		expire = 2020.10.10
		traits = { stern_anti_imperialist last_stand_fighter }
	}
	
	create_country_leader = {
		name = "Pro Democracy Protestors"
		desc = ""
		picture = "gfx/leaders/SPR/portrait_spr_anarchist_commune.dds"
		ideology = reactionary
		expire = 2020.10.10
		traits = {  }
		
	}
	
	create_country_leader = {
		name = "Pro Democracy Protestors"
		desc = ""
		picture = "gfx/leaders/SPR/portrait_spr_anarchist_commune.dds"
		ideology = social_democrat_idolg
		expire = 2020.10.10
		traits = {  }
	}
	
	create_country_leader = {
		name = "Left Wing Nationalists"
		desc = ""
		picture = "gfx/leaders/SPR/portrait_spr_anarchist_commune.dds"
		ideology = neutrality_idolg
		expire = 2020.10.10
		traits = {  }
	}
	
	create_country_leader = {
		name = "Right Wing Nationalists"
		desc = ""
		picture = "gfx/leaders/generic_right_wing_nationalists.dds"
		ideology = anti_imperialist
		expire = 2020.10.10
		traits = {  }
	}
	
	create_country_leader = {
		name = "Right Wing Nationalists"
		desc = ""
		picture = "gfx/leaders/generic_right_wing_nationalists.dds"
		ideology = nationalism_idolg
		expire = 2020.10.10
		traits = {  }
	}
	
	create_country_leader = {
		name = "Military Junta"
		desc = ""
		picture = "gfx/leaders/generic_right_wing_nationalists.dds"
		ideology = military_idolg
		expire = 2020.10.10
		traits = {  }
	}
				
	


}
